@page "/medicamentos"
@using Shared.ExtensionMethods;
@inject MedicamentosViewModel VM
@inherits BasePage<MedicamentosViewModel>

@code {
    // Cada item tem seu próprio estado expandido
    Dictionary<int, bool> ItensAbertos = new();

    void Toggle(int codigoId)
    {
        if (ItensAbertos.ContainsKey(codigoId))
            ItensAbertos[codigoId] = !ItensAbertos[codigoId];
        else
            ItensAbertos[codigoId] = true;
    }

    void ToggleWrapper(int codigoId)
    {
        Toggle(codigoId);
    }
}

<div class="centralizarObjetosVerticalmente">
    <button class="btn btn-primary mb-3" @onclick="VoltarParaHome">
        <i class="bi bi-arrow-left"></i> Voltar para Home
    </button>
</div>

<div>
    <PageTitle>Produtos</PageTitle>

    <div>
        @if (VM.HasTabs)
        {
            <TabsController ViewModel="VM" />
        }
    </div>

    <div class="mt-3">
        @if (VM.ActiveTab == "Cadastrar")
        {
            <ProdutosCadastroTab ViewModel="VM" />
        }
        else
        {
            <MedicamentosListarTab ViewModel="VM" />
        }
    </div>

</div>

<div class="botoes">
    <button @onclick="VM.CarregarProdutosCommand.ExecuteAsync">Carregar Banco de Dados</button>
    <button @onclick="VM.CriarProdutosCommand.ExecuteAsync">Cadastrar</button>
</div>